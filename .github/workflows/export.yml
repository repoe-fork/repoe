name: Run data export

on:
  workflow_dispatch:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      changes_detected: ${{ steps.autocommit.outputs.changes_detected }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        path: RePoE
    - name: checkout pypoe
      uses: actions/checkout@v3
      with:
        repository: lvlvllvlvllvlvl/PyPoE
        path: PyPoE
    - name: checkout pob
      uses: actions/checkout@v3
      with:
        repository: PathOfBuildingCommunity/PathOfBuilding
        path: pob
    - uses: leafo/gh-actions-lua@v9
    - uses: leafo/gh-actions-luarocks@v4
    - name: install a lua dependencies
      run: |
        luarocks install luabitop
        luarocks install dkjson
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: pip
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: install pypoe and update schema
      run: |
        poetry install
        poetry run python import_dat_schema.py -a stable
        poetry build
      working-directory: PyPoE/PyPoE/poe/file/specification/generation
    - name: install repoe
      run: |
        pip install ../PyPoE/dist/*.tar.gz
        pip install -r requirements.txt
        pip install -e .
      working-directory: RePoE
    - name: clean data dir
      run: find RePoE/RePoE/data/ '(' -name '*.json' -o -name '*.html' -o -name '*.txt' ')' -delete -print | wc -l
    - name: copy text files
      run: cp RePoE/RePoE/*.txt RePoE/RePoE/data/
    - name: lua export
      run: find pob/src/Data/ -name '*.lua' -exec lua RePoE/lua/Generate.lua '{}' RePoE/RePoE/data/pob \;
    - name: run export
      run: python run_parser.py all -f "http://patchcdn.pathofexile.com/$(<version.txt)/"
      working-directory: RePoE/RePoE
    - name: generate index.html
      run: find -type d -exec tree {} -H '.' --dirsfirst -F -L 1 -T "RePoE - Game version $(cat ../version.txt)" -I index.html --noreport --charset utf-8 -o {}/index.html \;
      working-directory: RePoE/RePoE/data/
    - name: commit changes
      id: autocommit
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        repository: RePoE
        commit_message: "[skip ci] Automated export"
    - name: lfs pull
      if: github.event_name == 'workflow_dispatch' || steps.autocommit.outputs.changes_detected == 'true'
      run: git lfs pull
      working-directory: RePoE
    - name: upload gh-pages artifact
      if: github.event_name == 'workflow_dispatch' || steps.autocommit.outputs.changes_detected == 'true'
      uses: actions/upload-pages-artifact@v1
      with:
        path: RePoE/RePoE/data/

  deploy:
    runs-on: ubuntu-latest

    needs: build
    if: github.event_name == 'workflow_dispatch' || needs.build.outputs.changes_detected == 'true'

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: deploy gh-pages
        id: deployment
        uses: actions/deploy-pages@v1
      - name: trigger poetrage
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.VERSION_COMMIT_PAT }}
          repository: lvlvllvlvllvlvl/poetrage
          event-type: build
