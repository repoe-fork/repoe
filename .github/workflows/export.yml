name: Run data export

on:
  workflow_dispatch:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      changes_detected: ${{ steps.autocommit.outputs.changes_detected }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        path: RePoE
    - name: checkout pypoe
      uses: actions/checkout@v3
      with:
        repository: lvlvllvlvllvlvl/PyPoE
        path: PyPoE
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: pip
    - name: install requirements
      run: pip install -r RePoE/requirements.txt
    - name: install pypoe
      run: pip install -e .
      working-directory: PyPoE
    - name: import schema
      run: python import_dat_schema.py
      working-directory: PyPoE/PyPoE/poe/file/specification/generation
    - name: install repoe
      run: pip install -e .
      working-directory: RePoE
    - name: clean data dir
      run: rm -r RePoE/RePoE/data/* && mkdir RePoE/RePoE/data/stat_translations
    - name: copy text files
      run: cp RePoE/RePoE/*.txt RePoE/RePoE/data/
    - name: run export
      run: python run_parser.py all -f "http://patchcdn.pathofexile.com/$(<version.txt)/"
      working-directory: RePoE/RePoE
    - name: generate index.html
      run: find -type d -exec tree {} -H '.' --dirsfirst -F -L 1 -T "$(cat ../version.txt)" -I index.html --noreport --charset utf-8 -o {}/index.html \;
      working-directory: RePoE/RePoE/data/
    - name: commit changes
      id: autocommit
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        repository: RePoE
        commit_message: "[skip ci] Automated export"
    - name: upload gh-pages artifact
      if: github.event_name == 'workflow_dispatch' || steps.autocommit.outputs.changes_detected == 'true'
      uses: actions/upload-pages-artifact@v1
      with:
        path: RePoE/RePoE/data/

  deploy:
    runs-on: ubuntu-latest

    needs: build
    if: github.event_name == 'workflow_dispatch' || needs.build.outputs.changes_detected == 'true'

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: deploy gh-pages
        id: deployment
        uses: actions/deploy-pages@v1
